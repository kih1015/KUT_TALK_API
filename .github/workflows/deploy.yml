name: Build and Deploy C Server

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake \
            libcjson-dev libmysqlclient-dev pkg-config

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cd build
          cmake --build . --config Release

      # 바이너리 복사 (build/kut_talk_api → remote:/home/ubuntu/kuttalk_server/build/kut_talk_api)
      - name: Deploy binary via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ubuntu
          key: ${{ secrets.DEPLOY_KEY_PEM }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: "build/kut_talk_api"
          target: "/home/ubuntu/kuttalk_server/"

      # 서버 재시작
      - name: Restart C server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ubuntu
          key: ${{ secrets.DEPLOY_KEY_PEM }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            PIDFILE=/home/ubuntu/kuttalk_server/server.pid
            
            # 1) 이전 서버가 기록해 둔 PID로 안전하게 종료
            if [ -f "$PIDFILE" ]; then
              OLD_PID=$(cat "$PIDFILE")
              if kill -0 "$OLD_PID" 2>/dev/null; then
                echo "Stopping existing server (PID=$OLD_PID)..."
                kill "$OLD_PID"
                sleep 5
              else
                echo "No running process with PID=$OLD_PID"
              fi
              rm -f "$PIDFILE"
            else
              echo "No PID file found, skipping stop."
            fi
            
            # 2) 새 서버 시작
            cd /home/ubuntu/kuttalk_server/build
            export DB_USER=${{ env.DB_USER }}
            export DB_PASS=${{ env.DB_PASS }}
            nohup ./kut_talk_api > ../kuttalk.log 2>&1 </dev/null &
            
            # 3) 방금 띄운 프로세스의 PID를 파일에 기록
            echo $! > "$PIDFILE"
            echo "Started new server with PID=$(cat "$PIDFILE")"
            
            # 4) 충분히 기동될 때까지 잠시 대기
            sleep 10
            
            exit 0