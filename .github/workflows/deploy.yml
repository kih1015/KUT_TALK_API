name: Build and Deploy C Server

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
      DB_USER:     ${{ secrets.DB_USER }}
      DB_PASS:     ${{ secrets.DB_PASS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake \
            libcjson-dev libmysqlclient-dev pkg-config

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cd build
          cmake --build . --config Release

#      # remote build 디렉터리 준비
#      - name: Ensure remote build dir exists
#        uses: appleboy/ssh-action@master
#        with:
#          host:     ${{ secrets.DEPLOY_HOST }}
#          username: ubuntu
#          key:      ${{ secrets.DEPLOY_KEY_PEM }}
#          port:     ${{ secrets.DEPLOY_PORT }}
#          script: |
#            rm -rf /home/ubuntu/kuttalk_server/build
#            mkdir -p /home/ubuntu/kuttalk_server/build

      # 바이너리 복사 (build/kut_talk_api → remote:/home/ubuntu/kuttalk_server/build/kut_talk_api)
      - name: Deploy binary via SCP
        uses: appleboy/scp-action@master
        with:
          host:     ${{ secrets.DEPLOY_HOST }}
          username: ubuntu
          key:      ${{ secrets.DEPLOY_KEY_PEM }}
          port:     ${{ secrets.DEPLOY_PORT }}
          source:   "build/kut_talk_api"
          target:   "/home/ubuntu/kuttalk_server/"

      # 서버 재시작
      - name: Restart C server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ubuntu
          key: ${{ secrets.DEPLOY_KEY_PEM }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd /home/ubuntu/kuttalk_server/build
              
            # 기존 프로세스 PID 조회
            PIDS=$(pgrep -f kut_talk_api || true)
            if [ -n "$PIDS" ]; then
              echo "Found existing PID(s): $PIDS"
              kill -TERM $PIDS
              echo "Waiting for process to exit..."
              sleep 5
            else
              echo "No existing process found."
            fi
              
            # 환경변수 주입
            export DB_USER=${{ env.DB_USER }}
            export DB_PASS=${{ env.DB_PASS }}
              
            # 새 서버 기동 (stdin 해제 & 백그라운드)
            nohup ./kut_talk_api > ../kuttalk.log 2>&1 </dev/null &
              
            # 충분히 기동될 때까지 대기
            sleep 10
              
            exit 0
